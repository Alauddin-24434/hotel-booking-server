name: Docker CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DB_URL: ${{ secrets.DB_URL }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      AAMARPAY_STORE_ID: ${{ secrets.AAMARPAY_STORE_ID }}  
      AAMARPAY_SIGNATURE_KEY: ${{ secrets.AAMARPAY_SIGNATURE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "DB_URL=${DB_URL}" > .env
          echo "CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}" >> .env
          echo "CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}" >> .env
          echo "CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}" >> .env
          echo "AAMARPAY_STORE_ID=${AAMARPAY_STORE_ID}" >> .env
          echo "AAMARPAY_SIGNATURE_KEY=${AAMARPAY_SIGNATURE_KEY}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker-compose push

      - name: Install Render CLI
        run: |
          curl -L "https://github.com/render-oss/cli/releases/latest/download/render-linux-amd64" -o render
          chmod +x render
          sudo mv render /usr/local/bin/render

      - name: Set Render Workspace (non-interactive)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          render workspace set "My Workspace" -o json --yes || true

      - name: Deploy to Production (main)
        if: github.ref == 'refs/heads/main'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          render deploys create ${{ secrets.PROD_RENDER_SERVICE_ID }} --confirm --no-input -o json
